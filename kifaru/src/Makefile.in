# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
noinst_PROGRAMS = kifaru$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
PROGRAMS = $(noinst_PROGRAMS)
am_kifaru_OBJECTS = kifaru-Kifaru.$(OBJEXT) kifaru-main.$(OBJEXT) \
	kifaru-effect.$(OBJEXT) kifaru-audio.$(OBJEXT) \
	kifaru-scheduler.$(OBJEXT) kifaru-timer.$(OBJEXT) \
	kifaru-primitives.$(OBJEXT) kifaru-inits.$(OBJEXT) \
	kifaru-EffectFactory.$(OBJEXT) kifaru-ScriptParser.$(OBJEXT) \
	kifaru-CompoundEffect.$(OBJEXT) kifaru-tools.$(OBJEXT) \
	kifaru-ImageProcessing.$(OBJEXT) \
	kifaru-ParticleStream.$(OBJEXT) kifaru-tinyxml.$(OBJEXT) \
	kifaru-tinystr.$(OBJEXT) kifaru-tinyxmlerror.$(OBJEXT) \
	kifaru-tinyxmlparser.$(OBJEXT) kifaru-Engine.$(OBJEXT) \
	kifaru-EngineTest.$(OBJEXT)
kifaru_OBJECTS = $(am_kifaru_OBJECTS)
kifaru_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(kifaru_SOURCES)
DIST_SOURCES = $(kifaru_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_LIBS = @SDL_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
kifaru_SOURCES := Kifaru.cpp main.cpp effect.cpp audio.cpp \
	scheduler.cpp timer.cpp tinyhml.h primitives.cpp inits.cpp \
	EffectFactory.cpp ScriptParser.cpp CompoundEffect.cpp \
	tools.cpp ImageProcessing.cpp ParticleStream.cpp tinyxml.cpp \
	tinystr.cpp tinyxmlerror.cpp tinyxmlparser.cpp Engine.cpp \
	EngineTest.cpp
kifaru_LDADD := -lstdc++ -lm -lSDLmain -lSDL -lSDL_mixer -lSGE -lSDL_image 
kifaru_LDFLAGS := -mnocygwin -mcpu=i686 -msse 
kifaru_CPPFLAGS := -DTIXML_USE_STL
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
kifaru$(EXEEXT): $(kifaru_OBJECTS) $(kifaru_DEPENDENCIES) 
	@rm -f kifaru$(EXEEXT)
	$(CXXLINK) $(kifaru_LDFLAGS) $(kifaru_OBJECTS) $(kifaru_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-CompoundEffect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-EffectFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-Engine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-EngineTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-ImageProcessing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-Kifaru.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-ParticleStream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-ScriptParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-audio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-effect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-inits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-primitives.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-scheduler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-tinystr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-tinyxml.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-tinyxmlerror.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-tinyxmlparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kifaru-tools.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

kifaru-Kifaru.o: Kifaru.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-Kifaru.o -MD -MP -MF "$(DEPDIR)/kifaru-Kifaru.Tpo" -c -o kifaru-Kifaru.o `test -f 'Kifaru.cpp' || echo '$(srcdir)/'`Kifaru.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-Kifaru.Tpo" "$(DEPDIR)/kifaru-Kifaru.Po"; else rm -f "$(DEPDIR)/kifaru-Kifaru.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Kifaru.cpp' object='kifaru-Kifaru.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-Kifaru.o `test -f 'Kifaru.cpp' || echo '$(srcdir)/'`Kifaru.cpp

kifaru-Kifaru.obj: Kifaru.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-Kifaru.obj -MD -MP -MF "$(DEPDIR)/kifaru-Kifaru.Tpo" -c -o kifaru-Kifaru.obj `if test -f 'Kifaru.cpp'; then $(CYGPATH_W) 'Kifaru.cpp'; else $(CYGPATH_W) '$(srcdir)/Kifaru.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-Kifaru.Tpo" "$(DEPDIR)/kifaru-Kifaru.Po"; else rm -f "$(DEPDIR)/kifaru-Kifaru.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Kifaru.cpp' object='kifaru-Kifaru.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-Kifaru.obj `if test -f 'Kifaru.cpp'; then $(CYGPATH_W) 'Kifaru.cpp'; else $(CYGPATH_W) '$(srcdir)/Kifaru.cpp'; fi`

kifaru-main.o: main.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-main.o -MD -MP -MF "$(DEPDIR)/kifaru-main.Tpo" -c -o kifaru-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-main.Tpo" "$(DEPDIR)/kifaru-main.Po"; else rm -f "$(DEPDIR)/kifaru-main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='kifaru-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

kifaru-main.obj: main.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-main.obj -MD -MP -MF "$(DEPDIR)/kifaru-main.Tpo" -c -o kifaru-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-main.Tpo" "$(DEPDIR)/kifaru-main.Po"; else rm -f "$(DEPDIR)/kifaru-main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='kifaru-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

kifaru-effect.o: effect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-effect.o -MD -MP -MF "$(DEPDIR)/kifaru-effect.Tpo" -c -o kifaru-effect.o `test -f 'effect.cpp' || echo '$(srcdir)/'`effect.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-effect.Tpo" "$(DEPDIR)/kifaru-effect.Po"; else rm -f "$(DEPDIR)/kifaru-effect.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='effect.cpp' object='kifaru-effect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-effect.o `test -f 'effect.cpp' || echo '$(srcdir)/'`effect.cpp

kifaru-effect.obj: effect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-effect.obj -MD -MP -MF "$(DEPDIR)/kifaru-effect.Tpo" -c -o kifaru-effect.obj `if test -f 'effect.cpp'; then $(CYGPATH_W) 'effect.cpp'; else $(CYGPATH_W) '$(srcdir)/effect.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-effect.Tpo" "$(DEPDIR)/kifaru-effect.Po"; else rm -f "$(DEPDIR)/kifaru-effect.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='effect.cpp' object='kifaru-effect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-effect.obj `if test -f 'effect.cpp'; then $(CYGPATH_W) 'effect.cpp'; else $(CYGPATH_W) '$(srcdir)/effect.cpp'; fi`

kifaru-audio.o: audio.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-audio.o -MD -MP -MF "$(DEPDIR)/kifaru-audio.Tpo" -c -o kifaru-audio.o `test -f 'audio.cpp' || echo '$(srcdir)/'`audio.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-audio.Tpo" "$(DEPDIR)/kifaru-audio.Po"; else rm -f "$(DEPDIR)/kifaru-audio.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='audio.cpp' object='kifaru-audio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-audio.o `test -f 'audio.cpp' || echo '$(srcdir)/'`audio.cpp

kifaru-audio.obj: audio.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-audio.obj -MD -MP -MF "$(DEPDIR)/kifaru-audio.Tpo" -c -o kifaru-audio.obj `if test -f 'audio.cpp'; then $(CYGPATH_W) 'audio.cpp'; else $(CYGPATH_W) '$(srcdir)/audio.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-audio.Tpo" "$(DEPDIR)/kifaru-audio.Po"; else rm -f "$(DEPDIR)/kifaru-audio.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='audio.cpp' object='kifaru-audio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-audio.obj `if test -f 'audio.cpp'; then $(CYGPATH_W) 'audio.cpp'; else $(CYGPATH_W) '$(srcdir)/audio.cpp'; fi`

kifaru-scheduler.o: scheduler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-scheduler.o -MD -MP -MF "$(DEPDIR)/kifaru-scheduler.Tpo" -c -o kifaru-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-scheduler.Tpo" "$(DEPDIR)/kifaru-scheduler.Po"; else rm -f "$(DEPDIR)/kifaru-scheduler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scheduler.cpp' object='kifaru-scheduler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp

kifaru-scheduler.obj: scheduler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-scheduler.obj -MD -MP -MF "$(DEPDIR)/kifaru-scheduler.Tpo" -c -o kifaru-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-scheduler.Tpo" "$(DEPDIR)/kifaru-scheduler.Po"; else rm -f "$(DEPDIR)/kifaru-scheduler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scheduler.cpp' object='kifaru-scheduler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`

kifaru-timer.o: timer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-timer.o -MD -MP -MF "$(DEPDIR)/kifaru-timer.Tpo" -c -o kifaru-timer.o `test -f 'timer.cpp' || echo '$(srcdir)/'`timer.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-timer.Tpo" "$(DEPDIR)/kifaru-timer.Po"; else rm -f "$(DEPDIR)/kifaru-timer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='timer.cpp' object='kifaru-timer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-timer.o `test -f 'timer.cpp' || echo '$(srcdir)/'`timer.cpp

kifaru-timer.obj: timer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-timer.obj -MD -MP -MF "$(DEPDIR)/kifaru-timer.Tpo" -c -o kifaru-timer.obj `if test -f 'timer.cpp'; then $(CYGPATH_W) 'timer.cpp'; else $(CYGPATH_W) '$(srcdir)/timer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-timer.Tpo" "$(DEPDIR)/kifaru-timer.Po"; else rm -f "$(DEPDIR)/kifaru-timer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='timer.cpp' object='kifaru-timer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-timer.obj `if test -f 'timer.cpp'; then $(CYGPATH_W) 'timer.cpp'; else $(CYGPATH_W) '$(srcdir)/timer.cpp'; fi`

kifaru-primitives.o: primitives.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-primitives.o -MD -MP -MF "$(DEPDIR)/kifaru-primitives.Tpo" -c -o kifaru-primitives.o `test -f 'primitives.cpp' || echo '$(srcdir)/'`primitives.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-primitives.Tpo" "$(DEPDIR)/kifaru-primitives.Po"; else rm -f "$(DEPDIR)/kifaru-primitives.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='primitives.cpp' object='kifaru-primitives.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-primitives.o `test -f 'primitives.cpp' || echo '$(srcdir)/'`primitives.cpp

kifaru-primitives.obj: primitives.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-primitives.obj -MD -MP -MF "$(DEPDIR)/kifaru-primitives.Tpo" -c -o kifaru-primitives.obj `if test -f 'primitives.cpp'; then $(CYGPATH_W) 'primitives.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-primitives.Tpo" "$(DEPDIR)/kifaru-primitives.Po"; else rm -f "$(DEPDIR)/kifaru-primitives.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='primitives.cpp' object='kifaru-primitives.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-primitives.obj `if test -f 'primitives.cpp'; then $(CYGPATH_W) 'primitives.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives.cpp'; fi`

kifaru-inits.o: inits.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-inits.o -MD -MP -MF "$(DEPDIR)/kifaru-inits.Tpo" -c -o kifaru-inits.o `test -f 'inits.cpp' || echo '$(srcdir)/'`inits.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-inits.Tpo" "$(DEPDIR)/kifaru-inits.Po"; else rm -f "$(DEPDIR)/kifaru-inits.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='inits.cpp' object='kifaru-inits.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-inits.o `test -f 'inits.cpp' || echo '$(srcdir)/'`inits.cpp

kifaru-inits.obj: inits.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-inits.obj -MD -MP -MF "$(DEPDIR)/kifaru-inits.Tpo" -c -o kifaru-inits.obj `if test -f 'inits.cpp'; then $(CYGPATH_W) 'inits.cpp'; else $(CYGPATH_W) '$(srcdir)/inits.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-inits.Tpo" "$(DEPDIR)/kifaru-inits.Po"; else rm -f "$(DEPDIR)/kifaru-inits.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='inits.cpp' object='kifaru-inits.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-inits.obj `if test -f 'inits.cpp'; then $(CYGPATH_W) 'inits.cpp'; else $(CYGPATH_W) '$(srcdir)/inits.cpp'; fi`

kifaru-EffectFactory.o: EffectFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-EffectFactory.o -MD -MP -MF "$(DEPDIR)/kifaru-EffectFactory.Tpo" -c -o kifaru-EffectFactory.o `test -f 'EffectFactory.cpp' || echo '$(srcdir)/'`EffectFactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-EffectFactory.Tpo" "$(DEPDIR)/kifaru-EffectFactory.Po"; else rm -f "$(DEPDIR)/kifaru-EffectFactory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EffectFactory.cpp' object='kifaru-EffectFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-EffectFactory.o `test -f 'EffectFactory.cpp' || echo '$(srcdir)/'`EffectFactory.cpp

kifaru-EffectFactory.obj: EffectFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-EffectFactory.obj -MD -MP -MF "$(DEPDIR)/kifaru-EffectFactory.Tpo" -c -o kifaru-EffectFactory.obj `if test -f 'EffectFactory.cpp'; then $(CYGPATH_W) 'EffectFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/EffectFactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-EffectFactory.Tpo" "$(DEPDIR)/kifaru-EffectFactory.Po"; else rm -f "$(DEPDIR)/kifaru-EffectFactory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EffectFactory.cpp' object='kifaru-EffectFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-EffectFactory.obj `if test -f 'EffectFactory.cpp'; then $(CYGPATH_W) 'EffectFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/EffectFactory.cpp'; fi`

kifaru-ScriptParser.o: ScriptParser.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-ScriptParser.o -MD -MP -MF "$(DEPDIR)/kifaru-ScriptParser.Tpo" -c -o kifaru-ScriptParser.o `test -f 'ScriptParser.cpp' || echo '$(srcdir)/'`ScriptParser.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-ScriptParser.Tpo" "$(DEPDIR)/kifaru-ScriptParser.Po"; else rm -f "$(DEPDIR)/kifaru-ScriptParser.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScriptParser.cpp' object='kifaru-ScriptParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-ScriptParser.o `test -f 'ScriptParser.cpp' || echo '$(srcdir)/'`ScriptParser.cpp

kifaru-ScriptParser.obj: ScriptParser.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-ScriptParser.obj -MD -MP -MF "$(DEPDIR)/kifaru-ScriptParser.Tpo" -c -o kifaru-ScriptParser.obj `if test -f 'ScriptParser.cpp'; then $(CYGPATH_W) 'ScriptParser.cpp'; else $(CYGPATH_W) '$(srcdir)/ScriptParser.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-ScriptParser.Tpo" "$(DEPDIR)/kifaru-ScriptParser.Po"; else rm -f "$(DEPDIR)/kifaru-ScriptParser.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScriptParser.cpp' object='kifaru-ScriptParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-ScriptParser.obj `if test -f 'ScriptParser.cpp'; then $(CYGPATH_W) 'ScriptParser.cpp'; else $(CYGPATH_W) '$(srcdir)/ScriptParser.cpp'; fi`

kifaru-CompoundEffect.o: CompoundEffect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-CompoundEffect.o -MD -MP -MF "$(DEPDIR)/kifaru-CompoundEffect.Tpo" -c -o kifaru-CompoundEffect.o `test -f 'CompoundEffect.cpp' || echo '$(srcdir)/'`CompoundEffect.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-CompoundEffect.Tpo" "$(DEPDIR)/kifaru-CompoundEffect.Po"; else rm -f "$(DEPDIR)/kifaru-CompoundEffect.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompoundEffect.cpp' object='kifaru-CompoundEffect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-CompoundEffect.o `test -f 'CompoundEffect.cpp' || echo '$(srcdir)/'`CompoundEffect.cpp

kifaru-CompoundEffect.obj: CompoundEffect.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-CompoundEffect.obj -MD -MP -MF "$(DEPDIR)/kifaru-CompoundEffect.Tpo" -c -o kifaru-CompoundEffect.obj `if test -f 'CompoundEffect.cpp'; then $(CYGPATH_W) 'CompoundEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/CompoundEffect.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-CompoundEffect.Tpo" "$(DEPDIR)/kifaru-CompoundEffect.Po"; else rm -f "$(DEPDIR)/kifaru-CompoundEffect.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CompoundEffect.cpp' object='kifaru-CompoundEffect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-CompoundEffect.obj `if test -f 'CompoundEffect.cpp'; then $(CYGPATH_W) 'CompoundEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/CompoundEffect.cpp'; fi`

kifaru-tools.o: tools.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-tools.o -MD -MP -MF "$(DEPDIR)/kifaru-tools.Tpo" -c -o kifaru-tools.o `test -f 'tools.cpp' || echo '$(srcdir)/'`tools.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-tools.Tpo" "$(DEPDIR)/kifaru-tools.Po"; else rm -f "$(DEPDIR)/kifaru-tools.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tools.cpp' object='kifaru-tools.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-tools.o `test -f 'tools.cpp' || echo '$(srcdir)/'`tools.cpp

kifaru-tools.obj: tools.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-tools.obj -MD -MP -MF "$(DEPDIR)/kifaru-tools.Tpo" -c -o kifaru-tools.obj `if test -f 'tools.cpp'; then $(CYGPATH_W) 'tools.cpp'; else $(CYGPATH_W) '$(srcdir)/tools.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-tools.Tpo" "$(DEPDIR)/kifaru-tools.Po"; else rm -f "$(DEPDIR)/kifaru-tools.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tools.cpp' object='kifaru-tools.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-tools.obj `if test -f 'tools.cpp'; then $(CYGPATH_W) 'tools.cpp'; else $(CYGPATH_W) '$(srcdir)/tools.cpp'; fi`

kifaru-ImageProcessing.o: ImageProcessing.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-ImageProcessing.o -MD -MP -MF "$(DEPDIR)/kifaru-ImageProcessing.Tpo" -c -o kifaru-ImageProcessing.o `test -f 'ImageProcessing.cpp' || echo '$(srcdir)/'`ImageProcessing.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-ImageProcessing.Tpo" "$(DEPDIR)/kifaru-ImageProcessing.Po"; else rm -f "$(DEPDIR)/kifaru-ImageProcessing.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ImageProcessing.cpp' object='kifaru-ImageProcessing.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-ImageProcessing.o `test -f 'ImageProcessing.cpp' || echo '$(srcdir)/'`ImageProcessing.cpp

kifaru-ImageProcessing.obj: ImageProcessing.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-ImageProcessing.obj -MD -MP -MF "$(DEPDIR)/kifaru-ImageProcessing.Tpo" -c -o kifaru-ImageProcessing.obj `if test -f 'ImageProcessing.cpp'; then $(CYGPATH_W) 'ImageProcessing.cpp'; else $(CYGPATH_W) '$(srcdir)/ImageProcessing.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-ImageProcessing.Tpo" "$(DEPDIR)/kifaru-ImageProcessing.Po"; else rm -f "$(DEPDIR)/kifaru-ImageProcessing.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ImageProcessing.cpp' object='kifaru-ImageProcessing.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-ImageProcessing.obj `if test -f 'ImageProcessing.cpp'; then $(CYGPATH_W) 'ImageProcessing.cpp'; else $(CYGPATH_W) '$(srcdir)/ImageProcessing.cpp'; fi`

kifaru-ParticleStream.o: ParticleStream.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-ParticleStream.o -MD -MP -MF "$(DEPDIR)/kifaru-ParticleStream.Tpo" -c -o kifaru-ParticleStream.o `test -f 'ParticleStream.cpp' || echo '$(srcdir)/'`ParticleStream.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-ParticleStream.Tpo" "$(DEPDIR)/kifaru-ParticleStream.Po"; else rm -f "$(DEPDIR)/kifaru-ParticleStream.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ParticleStream.cpp' object='kifaru-ParticleStream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-ParticleStream.o `test -f 'ParticleStream.cpp' || echo '$(srcdir)/'`ParticleStream.cpp

kifaru-ParticleStream.obj: ParticleStream.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-ParticleStream.obj -MD -MP -MF "$(DEPDIR)/kifaru-ParticleStream.Tpo" -c -o kifaru-ParticleStream.obj `if test -f 'ParticleStream.cpp'; then $(CYGPATH_W) 'ParticleStream.cpp'; else $(CYGPATH_W) '$(srcdir)/ParticleStream.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-ParticleStream.Tpo" "$(DEPDIR)/kifaru-ParticleStream.Po"; else rm -f "$(DEPDIR)/kifaru-ParticleStream.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ParticleStream.cpp' object='kifaru-ParticleStream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-ParticleStream.obj `if test -f 'ParticleStream.cpp'; then $(CYGPATH_W) 'ParticleStream.cpp'; else $(CYGPATH_W) '$(srcdir)/ParticleStream.cpp'; fi`

kifaru-tinyxml.o: tinyxml.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-tinyxml.o -MD -MP -MF "$(DEPDIR)/kifaru-tinyxml.Tpo" -c -o kifaru-tinyxml.o `test -f 'tinyxml.cpp' || echo '$(srcdir)/'`tinyxml.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-tinyxml.Tpo" "$(DEPDIR)/kifaru-tinyxml.Po"; else rm -f "$(DEPDIR)/kifaru-tinyxml.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tinyxml.cpp' object='kifaru-tinyxml.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-tinyxml.o `test -f 'tinyxml.cpp' || echo '$(srcdir)/'`tinyxml.cpp

kifaru-tinyxml.obj: tinyxml.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-tinyxml.obj -MD -MP -MF "$(DEPDIR)/kifaru-tinyxml.Tpo" -c -o kifaru-tinyxml.obj `if test -f 'tinyxml.cpp'; then $(CYGPATH_W) 'tinyxml.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxml.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-tinyxml.Tpo" "$(DEPDIR)/kifaru-tinyxml.Po"; else rm -f "$(DEPDIR)/kifaru-tinyxml.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tinyxml.cpp' object='kifaru-tinyxml.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-tinyxml.obj `if test -f 'tinyxml.cpp'; then $(CYGPATH_W) 'tinyxml.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxml.cpp'; fi`

kifaru-tinystr.o: tinystr.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-tinystr.o -MD -MP -MF "$(DEPDIR)/kifaru-tinystr.Tpo" -c -o kifaru-tinystr.o `test -f 'tinystr.cpp' || echo '$(srcdir)/'`tinystr.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-tinystr.Tpo" "$(DEPDIR)/kifaru-tinystr.Po"; else rm -f "$(DEPDIR)/kifaru-tinystr.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tinystr.cpp' object='kifaru-tinystr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-tinystr.o `test -f 'tinystr.cpp' || echo '$(srcdir)/'`tinystr.cpp

kifaru-tinystr.obj: tinystr.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-tinystr.obj -MD -MP -MF "$(DEPDIR)/kifaru-tinystr.Tpo" -c -o kifaru-tinystr.obj `if test -f 'tinystr.cpp'; then $(CYGPATH_W) 'tinystr.cpp'; else $(CYGPATH_W) '$(srcdir)/tinystr.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-tinystr.Tpo" "$(DEPDIR)/kifaru-tinystr.Po"; else rm -f "$(DEPDIR)/kifaru-tinystr.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tinystr.cpp' object='kifaru-tinystr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-tinystr.obj `if test -f 'tinystr.cpp'; then $(CYGPATH_W) 'tinystr.cpp'; else $(CYGPATH_W) '$(srcdir)/tinystr.cpp'; fi`

kifaru-tinyxmlerror.o: tinyxmlerror.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-tinyxmlerror.o -MD -MP -MF "$(DEPDIR)/kifaru-tinyxmlerror.Tpo" -c -o kifaru-tinyxmlerror.o `test -f 'tinyxmlerror.cpp' || echo '$(srcdir)/'`tinyxmlerror.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-tinyxmlerror.Tpo" "$(DEPDIR)/kifaru-tinyxmlerror.Po"; else rm -f "$(DEPDIR)/kifaru-tinyxmlerror.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tinyxmlerror.cpp' object='kifaru-tinyxmlerror.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-tinyxmlerror.o `test -f 'tinyxmlerror.cpp' || echo '$(srcdir)/'`tinyxmlerror.cpp

kifaru-tinyxmlerror.obj: tinyxmlerror.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-tinyxmlerror.obj -MD -MP -MF "$(DEPDIR)/kifaru-tinyxmlerror.Tpo" -c -o kifaru-tinyxmlerror.obj `if test -f 'tinyxmlerror.cpp'; then $(CYGPATH_W) 'tinyxmlerror.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxmlerror.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-tinyxmlerror.Tpo" "$(DEPDIR)/kifaru-tinyxmlerror.Po"; else rm -f "$(DEPDIR)/kifaru-tinyxmlerror.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tinyxmlerror.cpp' object='kifaru-tinyxmlerror.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-tinyxmlerror.obj `if test -f 'tinyxmlerror.cpp'; then $(CYGPATH_W) 'tinyxmlerror.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxmlerror.cpp'; fi`

kifaru-tinyxmlparser.o: tinyxmlparser.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-tinyxmlparser.o -MD -MP -MF "$(DEPDIR)/kifaru-tinyxmlparser.Tpo" -c -o kifaru-tinyxmlparser.o `test -f 'tinyxmlparser.cpp' || echo '$(srcdir)/'`tinyxmlparser.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-tinyxmlparser.Tpo" "$(DEPDIR)/kifaru-tinyxmlparser.Po"; else rm -f "$(DEPDIR)/kifaru-tinyxmlparser.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tinyxmlparser.cpp' object='kifaru-tinyxmlparser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-tinyxmlparser.o `test -f 'tinyxmlparser.cpp' || echo '$(srcdir)/'`tinyxmlparser.cpp

kifaru-tinyxmlparser.obj: tinyxmlparser.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-tinyxmlparser.obj -MD -MP -MF "$(DEPDIR)/kifaru-tinyxmlparser.Tpo" -c -o kifaru-tinyxmlparser.obj `if test -f 'tinyxmlparser.cpp'; then $(CYGPATH_W) 'tinyxmlparser.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxmlparser.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-tinyxmlparser.Tpo" "$(DEPDIR)/kifaru-tinyxmlparser.Po"; else rm -f "$(DEPDIR)/kifaru-tinyxmlparser.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tinyxmlparser.cpp' object='kifaru-tinyxmlparser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-tinyxmlparser.obj `if test -f 'tinyxmlparser.cpp'; then $(CYGPATH_W) 'tinyxmlparser.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxmlparser.cpp'; fi`

kifaru-Engine.o: Engine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-Engine.o -MD -MP -MF "$(DEPDIR)/kifaru-Engine.Tpo" -c -o kifaru-Engine.o `test -f 'Engine.cpp' || echo '$(srcdir)/'`Engine.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-Engine.Tpo" "$(DEPDIR)/kifaru-Engine.Po"; else rm -f "$(DEPDIR)/kifaru-Engine.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Engine.cpp' object='kifaru-Engine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-Engine.o `test -f 'Engine.cpp' || echo '$(srcdir)/'`Engine.cpp

kifaru-Engine.obj: Engine.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-Engine.obj -MD -MP -MF "$(DEPDIR)/kifaru-Engine.Tpo" -c -o kifaru-Engine.obj `if test -f 'Engine.cpp'; then $(CYGPATH_W) 'Engine.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-Engine.Tpo" "$(DEPDIR)/kifaru-Engine.Po"; else rm -f "$(DEPDIR)/kifaru-Engine.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Engine.cpp' object='kifaru-Engine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-Engine.obj `if test -f 'Engine.cpp'; then $(CYGPATH_W) 'Engine.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine.cpp'; fi`

kifaru-EngineTest.o: EngineTest.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-EngineTest.o -MD -MP -MF "$(DEPDIR)/kifaru-EngineTest.Tpo" -c -o kifaru-EngineTest.o `test -f 'EngineTest.cpp' || echo '$(srcdir)/'`EngineTest.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-EngineTest.Tpo" "$(DEPDIR)/kifaru-EngineTest.Po"; else rm -f "$(DEPDIR)/kifaru-EngineTest.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EngineTest.cpp' object='kifaru-EngineTest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-EngineTest.o `test -f 'EngineTest.cpp' || echo '$(srcdir)/'`EngineTest.cpp

kifaru-EngineTest.obj: EngineTest.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kifaru-EngineTest.obj -MD -MP -MF "$(DEPDIR)/kifaru-EngineTest.Tpo" -c -o kifaru-EngineTest.obj `if test -f 'EngineTest.cpp'; then $(CYGPATH_W) 'EngineTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EngineTest.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/kifaru-EngineTest.Tpo" "$(DEPDIR)/kifaru-EngineTest.Po"; else rm -f "$(DEPDIR)/kifaru-EngineTest.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EngineTest.cpp' object='kifaru-EngineTest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kifaru_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kifaru-EngineTest.obj `if test -f 'EngineTest.cpp'; then $(CYGPATH_W) 'EngineTest.cpp'; else $(CYGPATH_W) '$(srcdir)/EngineTest.cpp'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
